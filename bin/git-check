#!/bin/bash
while [ 1 -ne 0 ]; do

  TEMP=""
  echo $TEMP
  for d in ~/dev/*/; do
    cd $d
    if [ -d "./.git" ]; then
      git fetch >> /dev/null
      IFS='/' read -a array <<< "$d"
      DIR="${array[-1]}"

      TEMP+="\e[1m$DIR \e[0m"
      TEMP+=$(git branch | grep "*")
      TEMP+="\n"

      git diff --exit-code >> /dev/null
      if [ $? -ne 0 ]; then
        TEMP+="Unstaged changes\n"
      fi

      git diff --cached --exit-code >> /dev/null
      if [ $? -ne 0 ]; then
        TEMP+="Staged, uncommited changes\n"
      fi

      git ls-files --other --exclude-standard --directory | head -1
      if [ $? -ne 0 ]; then
        TEMP+="Untracked, unignored files\n"
      fi

      LOCAL=$((git rev-parse @) 2>&1)
      REMOTE=$((git rev-parse @{u}) 2>&1)
      BASE=$((git merge-base @ @{u}) 2>&1)
      MASTERPOINT=$((git merge-base @ origin/master) 2>&1)
      MASTER=$((git rev-parse origin/master) 2>&1)

      if [ $? -ne 0 ]; then
        TEMP+="No tracking branch\n"
      elif [ $LOCAL = $REMOTE ]; then
        TEMP+="Up to date\n"
      elif [ $LOCAL = $BASE ]; then
        TEMP+="Behind\n"
      elif [ $REMOTE = $BASE ]; then
        TEMP+="Ahead\n"
      else
        TEMP+="Diverged\n"
      fi
  
      if [ $MASTERPOINT != $MASTER ]; then
        TEMP+="Needs rebased\n"
      fi

      TEMP+="\n"
    fi
  done

clear
echo -e "$TEMP"
sleep 30
done
